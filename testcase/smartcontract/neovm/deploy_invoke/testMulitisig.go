package deploy_invoke


import (
	"github.com/ontio/ontology-go-sdk/utils"
	"github.com/ontio/ontology-test/testframework"
)

func TestMultisig(ctx *testframework.TestFrameworkContext) bool {

	//avmfile := "test_data/OEP4Sample.avm"
	//
	//code, err := ioutil.ReadFile(avmfile)
	//if err != nil {
	//	return false
	//}
	codeHash := ""

	codeAddress, _ := utils.GetContractAddress(codeHash)

	ctx.LogInfo("=====CodeAddress===%s", codeAddress.ToHexString())
	ctx.LogInfo("=====CodeAddress base58===%s", codeAddress.ToBase58())

	signer, err := ctx.GetDefaultAccount()
	if err != nil {
		ctx.LogError("TestOEP4Py GetDefaultAccount error:%s", err)
		return false
	}

	_, err = ctx.Ont.NeoVM.DeployNeoVMSmartContract(ctx.GetGasPrice(), ctx.GetGasLimit(),
		signer,
		true,
		codeHash,
		"TestOEP4Py",
		"1.0",
		"",
		"",
		"",
	)

	if err != nil {
		ctx.LogError("TestOEP4Py DeploySmartContract error: %s", err)
	}

	/*//WaitForGenerateBlock
	_, err = ctx.Ont.WaitForGenerateBlock(30*time.Second, 1)
	if err != nil {
		ctx.LogError("TestOEP4Py WaitForGenerateBlock error: %s", err)
		return false
	}

	account2, err := ctx.GetAccount("AS3SCXw8GKTEeXpdwVw7EcC4rqSebFYpfb")
	if err != nil {
		ctx.LogError("get account AS3SCXw8GKTEeXpdwVw7EcC4rqSebFYpfb failed")
		return false
	}
	pubkeybs1 := keypair.SerializePublicKey(signer.PublicKey)
	pubkeybs2 := keypair.SerializePublicKey(account2.PublicKey)
	pubkey1 := hex.EncodeToString(pubkeybs1)
	fmt.Printf("pubkey1 :%s\n",pubkey1)
	pubkey2 := hex.EncodeToString(pubkeybs2)
	fmt.Printf("pubkey2 :%s\n",pubkey2)


	pubKeys := []keypair.PublicKey{signer.PublicKey, account2.PublicKey}
	m := 2
	fromAddr, _ := types.AddressFromMultiPubKeys(pubKeys, m)
	fmt.Printf("fromAddr is %s\n",fromAddr.ToBase58())


	tx, err := ctx.Ont.NeoVM.NewNeoVMInvokeTransaction(ctx.GetGasPrice(), ctx.GetGasLimit(),codeAddress,[]interface{}{"test", []interface{}{}})
	if err != nil{
		ctx.LogError("NewNeoVMInvokeTransaction  error: %s", err)
		return false
	}
	tx.Payer = signer.Address

	err = ctx.Ont.MultiSignToTransaction(tx,2,pubKeys,signer)
	if err != nil{
		ctx.LogError("MultiSignToTransaction1  error: %s", err)
		return false
	}
	err = ctx.Ont.MultiSignToTransaction(tx,2,pubKeys,account2)
	if err != nil{
		ctx.LogError("MultiSignToTransaction2  error: %s", err)
		return false
	}

	err = ctx.Ont.SignToTransaction(tx,signer)
	if err != nil{
		ctx.LogError("SignToTransaction  error: %s", err)
		return false
	}
	txdata,_ := ctx.Ont.GetTxData(tx)
	fmt.Printf("txdata is %s\n",txdata)

	txHash,err:= ctx.Ont.SendTransaction(tx)
	if err != nil {
		ctx.LogError("SendTransaction init error: %s", err)
	}
	_, err = ctx.Ont.WaitForGenerateBlock(30*time.Second, 1)
	if err != nil {
		ctx.LogError("TestOEP4Py WaitForGenerateBlock error: %s", err)
		return false
	}

	//GetEventLog, to check the result of invoke
	events, err := ctx.Ont.GetSmartContractEvent(txHash.ToHexString())
	if err != nil {
		ctx.LogError("Dice GetSmartContractEvent error:%s", err)
		return false
	}
	if events.State == 0 {
		ctx.LogError("Dice failed invoked exec state return 0")
		return false
	}
	for _, notify := range events.Notify {
		ctx.LogInfo("%+v", notify)
	}*/

/*


	ctx.LogInfo("--------------------testing init--------------------")
	txHash, err := ctx.Ont.NeoVM.InvokeNeoVMContract(ctx.GetGasPrice(), ctx.GetGasLimit(),
		signer,
		codeAddress,
		[]interface{}{"test", []interface{}{}})
	if err != nil {
		ctx.LogError("TestOEP4Py init error: %s", err)
	}

	//WaitForGenerateBlock
	_, err = ctx.Ont.WaitForGenerateBlock(30*time.Second, 1)
	if err != nil {
		ctx.LogError("TestOEP4Py WaitForGenerateBlock error: %s", err)
		return false
	}

	//GetEventLog, to check the result of invoke
	events, err := ctx.Ont.GetSmartContractEvent(txHash.ToHexString())
	if err != nil {
		ctx.LogError("TestOEP4Py GetSmartContractEvent error:%s", err)
		return false
	}
	if events.State == 0 {
		ctx.LogError("TestOEP4Py failed invoked exec state return 0")
		return false
	}

	ctx.LogInfo("--------------------testing init end--------------------")*/


	return true
}
